**Petit exercice** :
	Écrire deux programmes en Perl.
	Le premier que nous appellerons « client » établit n connexions TCP à un serveur.
	Sur chaque connexion, il envoie toutes les 50ms un timestamp en millisecondes.
	Le second que nous appellerons « serveur » réceptionne les timestamps provenant des n connexions, les ordonne et les range dans un fichier.
	Ces différentes actions sont faites en continue, le client envoie des données en permanence, le serveur les reçoit en continu et, au fur et à mesure les ordonne et les stocke.
	Ces deux programmes doivent être écrits en Perl, on privilégiera les modules simples et légers si besoin.

**Le petit plus** : Dans le cas où n=50, le même timestamp risque d'être envoyé plusieurs fois. Faire une évolution du serveur afin qu'il supprime les doublons, l'idée est que les timestamps reçus n'apparaissent dans le fichier qu'une seule fois.

=====

links : 
	https://perldoc.perl.org/Socket
	https://zetcode.com/perl/socket/
	https://www.tutorialspoint.com/perl/perl_socket_programming.htm
	-- https://www.tutorialspoint.com/perl/perl_quick_guide.htm
	
	https://stackoverflow.com/questions/40915269/in-perl-socket-programming-how-to-send-a-data-from-client-and-receive-it-from-se
	https://stackoverflow.com/questions/49189467/perl-and-server-client-sockets
	
	https://www.binarytides.com/perl-socket-programming-tutorial/ !!
	
	https://flylib.com/books/en/3.214.1.131/1/ -- The Chat Server
